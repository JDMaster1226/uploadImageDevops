{"ast":null,"code":"var _jsxFileName = \"/home/juan/Documentos/trabajo/uploadImageDevops/client/src/components/Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport { ServerAPI } from '../services/serverApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Home() {\n  _s();\n\n  const server = ServerAPI.getServer() + '/images/';\n  const probaenv = process.env.NAMESER || \"UPLOAD IMAGE\";\n  const [srcImage, setSrcImage] = useState('');\n  const [boolErr, setBoolErr] = useState(false);\n  const [srcPredic, setSrcPredic] = useState('');\n  const [resultImg, setResultImg] = useState('');\n  const [load, setLoad] = useState(false);\n  const imageUpload = useRef();\n  const typeAccepted = /png|jpg|jpeg/;\n\n  const clear = () => {\n    setSrcImage('');\n    setBoolErr(false);\n    setSrcPredic('');\n    setResultImg('');\n    setLoad(false);\n  };\n\n  const handleUpload = async () => {\n    const image = imageUpload.current.files[0];\n\n    if (image && typeAccepted.test(image.type)) {\n      clear();\n      var formData = new FormData();\n      formData.append(\"image\", image);\n      const {\n        data\n      } = await ServerAPI.uploadImage(formData);\n      const {\n        filename,\n        filePath\n      } = data;\n      setSrcImage(filename);\n      ServerAPI.processImg({\n        rutaImagen: filePath,\n        nombre: filename\n      }).then(dt => {\n        const {\n          data: {\n            image\n          }\n        } = dt;\n        setLoad(true);\n        setResultImg(image);\n        setSrcPredic(\"pr\" + filename);\n      });\n    } else {\n      setBoolErr(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: probaenv\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), boolErr && /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"ERROR\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: imageUpload,\n      type: \"file\",\n      name: \"image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Cargar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), srcImage && /*#__PURE__*/_jsxDEV(\"a\", {\n      href: server + srcImage,\n      target: \"_blank\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: server + srcImage,\n        width: \"300\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 64\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 20\n    }, this), srcImage && (load ? /*#__PURE__*/_jsxDEV(\"a\", {\n      href: server + srcPredic,\n      target: \"_blank\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: server + srcPredic,\n        width: \"300\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 73\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 28\n    }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Cargando...esto puede tardar unos minutos.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 124\n    }, this)), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: resultImg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Home, \"A0WnFxH3aznCXg+P8B2HfRn/XwA=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/juan/Documentos/trabajo/uploadImageDevops/client/src/components/Home.jsx"],"names":["React","useRef","useState","ServerAPI","Home","server","getServer","probaenv","process","env","NAMESER","srcImage","setSrcImage","boolErr","setBoolErr","srcPredic","setSrcPredic","resultImg","setResultImg","load","setLoad","imageUpload","typeAccepted","clear","handleUpload","image","current","files","test","type","formData","FormData","append","data","uploadImage","filename","filePath","processImg","rutaImagen","nombre","then","dt"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAASC,SAAT,QAA0B,uBAA1B;;;AAEA,OAAO,SAASC,IAAT,GAAgB;AAAA;;AACrB,QAAMC,MAAM,GAAGF,SAAS,CAACG,SAAV,KAAsB,UAArC;AACA,QAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAR,CAAYC,OAAZ,IAAuB,cAAxC;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACe,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACiB,IAAD,EAAOC,OAAP,IAAkBlB,QAAQ,CAAC,KAAD,CAAhC;AAEA,QAAMmB,WAAW,GAAGpB,MAAM,EAA1B;AACA,QAAMqB,YAAY,GAAG,cAArB;;AAGA,QAAMC,KAAK,GAAG,MAAI;AAChBX,IAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,IAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACAE,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACAE,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAND;;AAOA,QAAMI,YAAY,GAAG,YAAY;AAC/B,UAAMC,KAAK,GAAGJ,WAAW,CAACK,OAAZ,CAAoBC,KAApB,CAA0B,CAA1B,CAAd;;AAEA,QAAIF,KAAK,IAAIH,YAAY,CAACM,IAAb,CAAkBH,KAAK,CAACI,IAAxB,CAAb,EAA4C;AAC1CN,MAAAA,KAAK;AACL,UAAIO,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACAD,MAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBP,KAAzB;AACA,YAAM;AAAEQ,QAAAA;AAAF,UAAW,MAAM9B,SAAS,CAAC+B,WAAV,CAAsBJ,QAAtB,CAAvB;AACA,YAAM;AAAEK,QAAAA,QAAF;AAAYC,QAAAA;AAAZ,UAAyBH,IAA/B;AACArB,MAAAA,WAAW,CAACuB,QAAD,CAAX;AACAhC,MAAAA,SAAS,CAACkC,UAAV,CAAqB;AAAEC,QAAAA,UAAU,EAAEF,QAAd;AAAwBG,QAAAA,MAAM,EAACJ;AAA/B,OAArB,EAAgEK,IAAhE,CAAqEC,EAAE,IAAI;AACzE,cAAM;AAAER,UAAAA,IAAI,EAAE;AAAER,YAAAA;AAAF;AAAR,YAAsBgB,EAA5B;AACArB,QAAAA,OAAO,CAAC,IAAD,CAAP;AACAF,QAAAA,YAAY,CAACO,KAAD,CAAZ;AACAT,QAAAA,YAAY,CAAC,OAAKmB,QAAN,CAAZ;AACD,OALD;AAMD,KAbD,MAaO;AACLrB,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD;AACF,GAnBD;;AAqBA,sBACE;AAAA,4BACE;AAAA,gBAAKP;AAAL;AAAA;AAAA;AAAA;AAAA,YADF,EAEGM,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFd,eAGE;AAAO,MAAA,GAAG,EAAEQ,WAAZ;AAAyB,MAAA,IAAI,EAAC,MAA9B;AAAqC,MAAA,IAAI,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAQ,MAAA,OAAO,EAAEG,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,EAKGb,QAAQ,iBAAI;AAAG,MAAA,IAAI,EAAEN,MAAM,GAAGM,QAAlB;AAA4B,MAAA,MAAM,EAAC,QAAnC;AAAA,6BAA4C;AAAK,QAAA,GAAG,EAAEN,MAAM,GAAGM,QAAnB;AAA6B,QAAA,KAAK,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA;AAA5C;AAAA;AAAA;AAAA;AAAA,YALf,EAMGA,QAAQ,KAAKQ,IAAI,gBAAG;AAAG,MAAA,IAAI,EAAEd,MAAM,GAAGU,SAAlB;AAA6B,MAAA,MAAM,EAAC,QAApC;AAAA,6BAA6C;AAAK,QAAA,GAAG,EAAEV,MAAM,GAAGU,SAAnB;AAA8B,QAAA,KAAK,EAAC;AAApC;AAAA;AAAA;AAAA;AAAA;AAA7C;AAAA;AAAA;AAAA;AAAA,YAAH,gBAAmG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA5G,CANX,eAOE;AAAA,gBAAKE;AAAL;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA,kBADF;AAWD;;GArDeb,I;;KAAAA,I","sourcesContent":["import React, { useRef, useState } from 'react';\nimport { ServerAPI } from '../services/serverApi';\n\nexport function Home() {\n  const server = ServerAPI.getServer()+'/images/';\n  const probaenv = process.env.NAMESER || \"UPLOAD IMAGE\";\n  const [srcImage, setSrcImage] = useState('');\n  const [boolErr, setBoolErr] = useState(false);\n\n  const [srcPredic, setSrcPredic] = useState('');\n  const [resultImg, setResultImg] = useState('');\n  const [load, setLoad] = useState(false);\n\n  const imageUpload = useRef();\n  const typeAccepted = /png|jpg|jpeg/;\n\n\n  const clear = ()=>{\n    setSrcImage('');\n    setBoolErr(false);\n    setSrcPredic('');\n    setResultImg('');\n    setLoad(false);\n  }\n  const handleUpload = async () => {\n    const image = imageUpload.current.files[0];\n\n    if (image && typeAccepted.test(image.type)) {\n      clear();\n      var formData = new FormData();\n      formData.append(\"image\", image);\n      const { data } = await ServerAPI.uploadImage(formData);\n      const { filename, filePath } = data;\n      setSrcImage(filename);\n      ServerAPI.processImg({ rutaImagen: filePath, nombre:filename }).then(dt => {\n        const { data: { image } } = dt;\n        setLoad(true);\n        setResultImg(image);\n        setSrcPredic(\"pr\"+filename);\n      });\n    } else {\n      setBoolErr(true);\n    }\n  }\n\n  return (\n    <>\n      <h1>{probaenv}</h1>\n      {boolErr && <h4>ERROR</h4>}\n      <input ref={imageUpload} type=\"file\" name=\"image\" />\n      <button onClick={handleUpload}>Cargar</button>\n      {srcImage && <a href={server + srcImage} target=\"_blank\"><img src={server + srcImage} width=\"300\" /></a>}\n      {srcImage && (load ? <a href={server + srcPredic} target=\"_blank\"><img src={server + srcPredic} width=\"300\" /></a> : <h4>Cargando...esto puede tardar unos minutos.</h4>)}\n      <h4>{resultImg}</h4>\n    </>\n  );\n}"]},"metadata":{},"sourceType":"module"}